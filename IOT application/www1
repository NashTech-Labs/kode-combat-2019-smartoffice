#!/usr/bin/env node



var app = require('../app');
var debug = require('debug')('SMART-HOME:server');
var http = require('http');


require('dotenv').config();


var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);



var server = http.createServer(app);





server.listen(port);
server.on('error', onError);
server.on('listening', onListening);



function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    
    return val;
  }

  if (port >= 0) {
    
    return port;
  }

  return false;
}



function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}



function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}

var io = require('socket.io').listen(server);
io.on("connection", function(socket){
	console.log("Client Connected");
        socket.on("stateChanged", function(state){
	console.log("State Changed: "+ state);
	//io.emit("updateState",state);
	});
});